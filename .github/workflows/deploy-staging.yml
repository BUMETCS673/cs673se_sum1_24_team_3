# .github/workflows/deploy-staging.yaml

name: Deploy to Staging

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup Node and Cache
        uses: actions/setup-node@v3
        with:
          node-version: 16.18
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Type Check
        run: npm run type-check
      - name: Unit Tests
        run: npm run test
      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.AWS_ECR_REGISTRY_URL }}/my-app:staging .
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_REGISTRY_URL }}
          docker push ${{ secrets.AWS_ECR_REGISTRY_URL }}/my-app:staging
      - name: Create Artifact
        run: |
          mkdir -p artifacts
          echo ${{ secrets.AWS_ECR_REGISTRY_URL }}/my-app:staging > artifacts/image.txt
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: artifact-image
          path: artifacts

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build
    environment: staging
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: artifact-image
          path: artifacts
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Set up kubectl
        uses: azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AWS_ACCESS_KEY_ID }}
          region: ${{ secrets.AWS_REGION }}
          cluster-name: ${{ secrets.AWS_EKS_CLUSTER_NAME }}
      - name: Deploy to EKS
        run: |
          image=$(cat artifacts/image.txt)
          kubectl set image deployment/my-app my-app=$image --record

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: artifact-image
          path: artifacts
      - name: Zip Artifact
        run: |
          zip -r artifact-image.zip artifacts
      - name: Create Release Tag
        id: create-release-tag
        run: echo "tag_name=r-$(printf %04d $GITHUB_RUN_NUMBER)" >> $GITHUB_ENV
      - name: Create Draft Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.create-release-tag.outputs.tag_name }}
          name: Release ${{ steps.create-release-tag.outputs.tag_name }}
          body: |
            ## Info
            Commit ${{ github.sha }} was deployed to `staging`. [See code diff](${{ github.event.compare }}).

            It was initialized by [${{ github.event.sender.login }}](${{ github.event.sender.html_url }}).

            ## How to Promote?
            In order to promote this to prod, edit the draft and press **"Publish release"**.
          draft: true
          files: artifact-image.zip
